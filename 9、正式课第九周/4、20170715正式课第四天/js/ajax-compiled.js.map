{"version":3,"sources":["ajax.js"],"names":[],"mappings":"AAAA;AACA;AACA,SAAS,SAAT,GAAqB;AACjB,QAAI,MAAM,IAAV;AACA,QAAI,OAAO,KAAX;AACA,QAAI,MAAM,CACN,YAAY;AACR,eAAO,IAAI,cAAJ,EAAP;AACH,KAHK,EAIN,YAAY;AACR,eAAO,IAAI,aAAJ,CAAkB,mBAAlB,CAAP;AACH,KANK,EAON,YAAY;AACR,eAAO,IAAI,aAAJ,CAAkB,gBAAlB,CAAP;AACH,KATK,EAUN,YAAY;AACR,eAAO,IAAI,aAAJ,CAAkB,gBAAlB,CAAP;AACH,KAZK,CAAV;AAcA,SAAI,IAAI,IAAE,CAAV,EAAY,IAAE,IAAI,MAAlB,EAAyB,GAAzB,EAA6B;AACzB,YAAI,QAAQ,IAAI,CAAJ,CAAZ;AACA,YAAG;AACC,kBAAM,OAAN;AACA,wBAAY,KAAZ;AACA,mBAAM,IAAN;AACA,mBAAO,GAAP;AACH,SALD,CAKC,OAAM,CAAN,EAAQ,CAER;AAEJ;AACD,QAAG,CAAC,IAAJ,EAAS;AACL,cAAM,IAAI,KAAJ,CAAU,cAAV,CAAN;AACH;AACJ;AACD;;AAEA;;AAEA,SAAS,IAAT,CAAc,OAAd,EAAuB;AACnB;AACA,QAAI,WAAW;AACX,aAAM,EADK;AAEX,cAAO,KAFI;AAGX,kBAAW,MAHA;AAIX,eAAQ,IAJG;AAKX,cAAO,IALI;AAMX,iBAAU,IANC,EAMI;AACf,iBAAU;AAPC,KAAf;AASA,SAAI,IAAI,GAAR,IAAe,OAAf,EAAuB;AACnB,YAAG,QAAQ,cAAR,CAAuB,GAAvB,CAAH,EAA+B;AAC3B,qBAAS,GAAT,IAAgB,QAAQ,GAAR,CAAhB;AACH;AACJ;AACD;AACA,QAAG,SAAS,IAAT,KAAkB,KAArB,EAA2B;AACvB;AACA,iBAAS,GAAT,CAAa,OAAb,CAAqB,GAArB,KAA2B,CAA3B,GAA+B,SAAS,GAAT,IAAc,GAA7C,GAAiD,SAAS,GAAT,IAAc,GAA/D;AACA,iBAAS,GAAT,IAAe,OAAM,KAAK,MAAL,EAArB;AACH;AACD,QAAI,MAAM,WAAV,CAtBmB,CAsBG;;AAEtB,QAAI,IAAJ,CAAS,SAAS,IAAlB,EAAuB,SAAS,GAAhC,EAAoC,SAAS,KAA7C;;AAEA,QAAI,kBAAJ,GAAyB,YAAY;AACjC,YAAG,IAAI,UAAJ,KAAmB,CAAnB,IAAwB,UAAU,IAAV,CAAe,IAAI,MAAnB,CAA3B,EAAsD;AAClD,gBAAI,MAAM,IAAI,YAAd;AACA,gBAAG,SAAS,QAAT,KAAsB,MAAzB,EAAgC;AAC5B,sBAAM,UAAU,MAAV,GAAiB,KAAK,KAAL,CAAW,GAAX,CAAjB,GAAiC,KAAK,MAAI,GAAJ,GAAQ,GAAb,CAAvC;AACH;AACD,qBAAS,OAAT,CAAiB,IAAjB,CAAsB,GAAtB,EAA0B,GAA1B;AACH;AACJ,KARD;AASA,QAAI,IAAJ,CAAS,SAAS,IAAlB;AACH;AACD,KAAK;AACD,SAAK,YADJ;AAED,aAAS,UAAU,IAAV,EAAgB;AACrB,gBAAQ,GAAR,CAAY,IAAZ;AACH;AAJA,CAAL;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ajax-compiled.js","sourcesContent":["// 1 创建ajax对象 ,兼容所有的浏览器\n// 函数的惰性思想\nfunction createXHR() {\n    var xhr = null;\n    var flag = false;\n    var ary = [\n        function () {\n            return new XMLHttpRequest();\n        },\n        function () {\n            return new ActiveXObject(\"Microsoft.XMLHTTP\");\n        },\n        function () {\n            return new ActiveXObject(\"Msxml2.XMLHTTP\")\n        },\n        function () {\n            return new ActiveXObject(\"Msxml3.XMLHTTP\")\n        }\n    ];\n    for(var i=0;i<ary.length;i++){\n        var curFn = ary[i];\n        try{\n            xhr = curFn();\n            createXHR = curFn;\n            flag =true;\n            return xhr;\n        }catch(e){\n\n        }\n\n    }\n    if(!flag){\n        throw new Error(\"你的浏览器不支持ajax\");\n    }\n}\n// 在IE6下，XMLHttpRequest这个类是不存在的;\n\ncreateXHR();\n\nfunction ajax(options) {\n    // 初始化常用的参数\n    var _default = {\n        url : \"\",\n        type : \"get\",\n        dataType : \"json\",\n        async : true,\n        data : null,\n        timeout : 1000,//请求超时\n        success : null\n    }\n    for(var key in options){\n        if(options.hasOwnProperty(key)){\n            _default[key] = options[key];\n        }\n    }\n    // get 请求是有缓存的\n    if(_default.type === \"get\"){\n        // 问号后面的参数用“&” 连接起来\n        _default.url.indexOf(\"?\")>=0 ? _default.url+=\"&\":_default.url+=\"?\";\n        _default.url+= \"_=\" +Math.random();\n    };\n    var xhr = createXHR();// 创建的ajax 的对象\n\n    xhr.open(_default.type,_default.url,_default.async);\n\n    xhr.onreadystatechange = function () {\n        if(xhr.readyState === 4 && /^2\\d{2}/.test(xhr.status)){\n            var val = xhr.responseText;\n            if(_default.dataType === \"json\"){\n                val = \"JSON\" in window?JSON.parse(val):eval(\"(\"+val+\")\");\n            }\n            _default.success.call(xhr,val)\n        }\n    }\n    xhr.send(_default.data);\n}\najax({\n    url: \"./data.txt\",\n    success: function (data) {\n        console.log(data)\n    }\n})\n// ajax({url:\"./data.txt\"})\n// $.ajax({\n//     url : \"./data.txt\",\n//     type: \"get\",\n//     // async : true,\n//     // dataType :\"json\",\n//     success : function (data) {\n//             console.log(this)// ajax这个实例；\n//             for(var i=0;i<data.length;i++){\n//\n//             }\n//\n//\n//\n//     }\n//     // error: function () {\n//     //\n//     // }\n// })\n\n\n\n\n\n"]}