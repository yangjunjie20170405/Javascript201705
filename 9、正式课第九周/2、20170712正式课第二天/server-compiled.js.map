{"version":3,"sources":["server.js"],"names":[],"mappings":"AAAA;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AAAA,IACI,KAAK,QAAQ,IAAR,CADT;AAAA,IAEI,MAAM,QAAQ,KAAR,CAFV;AAGA;AACA;AACA,IAAI,SAAS,KAAK,YAAL,CAAkB,UAAU,OAAV,EAAkB,QAAlB,EAA4B;AACvD;AACA;AACA;AACA;AACA,YAAQ,GAAR,CAAY,QAAQ,GAApB;AACA;AACA,QAAI,SAAS,IAAI,KAAJ,CAAU,QAAQ,GAAlB,CAAb;AACA,QAAI,WAAW,OAAO,QAAtB;AACA,YAAQ,GAAR,CAAY,MAAZ;AACA,QAAG,aAAa,aAAhB,EAA8B;AAC1B;AACA,YAAI,UAAQ,GAAG,YAAH,CAAgB,cAAhB,EAA+B,OAA/B,CAAZ;AACA;AACA;AACA;AACA;AACA,iBAAS,KAAT,CAAe,OAAf;AACA,iBAAS,GAAT;AACH;AACJ,CApBY,CAAb;AAqBA;AACA,OAAO,MAAP,CAAc,EAAd,EAAiB,YAAY;AACzB;AACA;AACA,YAAQ,GAAR,CAAY,mBAAZ;AACH,CAJD;AAKA;AACA;AACA;AACA","file":"server-compiled.js","sourcesContent":["// 导入我们常用三个模块\nvar http = require(\"http\"),\n    fs = require(\"fs\"),\n    url = require(\"url\");\n// http  :\n// http.createServer() ; 创建一个服务,变量server就是我们创建出来的那个服务\nvar server = http.createServer(function (request,response) {\n    // 当客户端向服务器这个端口号发送一个请求，并且当前的服务已经成功接收到这个请求后会执行这个函数\n    // request (请求)  ： 存放的是客户端请求信息;包含客户端访问服务器url,问号传参的方式\n    // request.url : 存放的客户端请求文件资源的目录以及传给服务器的参数\n    // response : (响应) 服务器响应给客户端的信息\n    console.log(request.url);\n    //  url.parse   把request的属性url的属性值转换成对象\n    var urlObj = url.parse(request.url);\n    var pathname = urlObj.pathname;\n    console.log(urlObj);\n    if(pathname === \"/index.html\"){\n        //  读物服务器上文件的内容\n        var content=fs.readFileSync(\"./index.html\",\"utf-8\");\n        // 把读取的内容给了响应\n        // response : 提供了向客户端返回内容和数据的方法\n        // response.write : 向客户端返回内容\n        // response.end : 告诉服务器，响应结束了\n        response.write(content);\n        response.end();\n    }\n});\n// 监听当前的服务\nserver.listen(83,function () {\n    //  80: 端口号\n    // 回调函数执行 ： 当服务创建成功，并且端口号也监听成功之后执行这个回调函数\n    console.log(\"server is success\");\n});\n//localhost: 本地\n// 端口号..\n// 当前资源文件路径\n// ?_=math.random()  : 为了不走缓存\n\n\n"]}